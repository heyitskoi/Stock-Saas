version: '3.9'
services:
  db:
    image: postgres:15
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-stock}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-stock}
      POSTGRES_DB: ${POSTGRES_DB:-stockdb}
    volumes:
      - postgres-data:/var/lib/postgresql/data
  backend:
    build: .
    container_name: backend
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER:-stock}:${POSTGRES_PASSWORD:-stock}@db:5432/${POSTGRES_DB:-stockdb}
      SECRET_KEY: ${SECRET_KEY}
      ADMIN_USERNAME: ${ADMIN_USERNAME:-admin}
      ADMIN_PASSWORD: ${ADMIN_PASSWORD:-admin}
    depends_on:
      - db
    ports:
      - "8000:8000"
  redis:
    image: redis:7
  worker:
    build: .
    command: celery -A tasks worker --loglevel=info
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER:-stock}:${POSTGRES_PASSWORD:-stock}@db:5432/${POSTGRES_DB:-stockdb}
      CELERY_BROKER_URL: redis://redis:6379/0
    depends_on:
      - db
      - redis
  scheduler:
    build: .
    command: celery -A tasks beat --loglevel=info
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER:-stock}:${POSTGRES_PASSWORD:-stock}@db:5432/${POSTGRES_DB:-stockdb}
      CELERY_BROKER_URL: redis://redis:6379/0
    depends_on:
      - db
      - redis
  frontend:
    build:
      context: ./frontend/
    container_name: frontend
    environment:
      NEXT_PUBLIC_API_URL: ${NEXT_PUBLIC_API_URL:-http://backend:8000}
    depends_on:
      - backend
    ports:
      - "3000:3000"
volumes:
  postgres-data:
